// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plans {
  FREE
  PRO
}

enum DeliverStatusEnums {
  PENDING
  DELIVERED
  FAILED
}

model User {
  id         String  @id @default(cuid())
  externalId String? @unique

  quotaLimit Int
  plan       Plans @default(FREE)

  email         String          @unique
  apikey        String          @unique @default(cuid())
  discordId     String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  EventCategory EventCategory[]
  Event         Event[]
  Quota         Quota[]

  @@index([email, apikey])
}

model EventCategory {
  id        String   @id @default(cuid())
  name      String
  color     Int
  emoji     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User    @relation(fields: [userId], references: [id])
  userId String
  Event  Event[]

  @@unique([name, userId])
}

model Event {
  id               String @id @default(cuid())
  formattedMessage String

  user            User               @relation(fields: [userId], references: [id])
  userId          String
  name            String
  fields          Json
  devliveryStatus DeliverStatusEnums @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  EventCategory   EventCategory? @relation(fields: [eventCategoryId], references: [id])
  eventCategoryId String?

  @@index([createdAt])
}

model Quota {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  year  Int
  month Int
  count Int @default(0)

  updatedAt DateTime @updatedAt
}
